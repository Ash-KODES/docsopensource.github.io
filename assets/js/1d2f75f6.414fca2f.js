"use strict";(self.webpackChunkgwoc_open_source=self.webpackChunkgwoc_open_source||[]).push([[2912],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return h}});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(r),h=s,f=u["".concat(l,".").concat(h)]||u[h]||d[h]||a;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function h(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,o=new Array(a);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5231:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var n=r(7462),s=r(3366),a=(r(7294),r(3905)),o=["components"],i={sidebar_position:102},l="Express",p={unversionedId:"Popular_Projects/6.101_express",id:"Popular_Projects/6.101_express",isDocsHomePage:!1,title:"Express",description:"Express is a minimal and flexible Node.js web application framework that provides a robust set of features for web and mobile applications.The most common use for Node.js is writing Web applications, and a large percentage of these web applications today are using Express.js as their server framework. Express can be used to create JSON APIs, Server-side rendered web applications, or Microservices.",source:"@site/docs/Popular_Projects/6.101_express.md",sourceDirName:"Popular_Projects",slug:"/Popular_Projects/6.101_express",permalink:"/docs/Popular_Projects/6.101_express",tags:[],version:"current",sidebarPosition:102,frontMatter:{sidebar_position:102},sidebar:"tutorialSidebar",previous:{title:"Marlin",permalink:"/docs/Popular_Projects/6.100_Marlin"},next:{title:"CodeIgniter",permalink:"/docs/Popular_Projects/6.102_codeIgniter"}},c=[{value:"Developers :-",id:"developers--",children:[],level:2},{value:"What are Routes?",id:"what-are-routes",children:[],level:2},{value:"Request/Response",id:"requestresponse",children:[],level:2},{value:"Middlewares",id:"middlewares",children:[],level:2},{value:"Why use Express?",id:"why-use-express",children:[],level:2},{value:"Example code to import express in the node app:",id:"example-code-to-import-express-in-the-node-app",children:[],level:2},{value:"Companies using Express in their stack:",id:"companies-using-express-in-their-stack",children:[],level:2},{value:"Alternatives of express:",id:"alternatives-of-express",children:[],level:2}],d={toc:c};function u(e){var t=e.components,r=(0,s.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"express"},"Express"),(0,a.kt)("img",{src:"https://camo.githubusercontent.com/0566752248b4b31b2c4bdc583404e41066bd0b6726f310b73e1140deefcc31ac/68747470733a2f2f692e636c6f756475702e636f6d2f7a6659366c4c376546612d3330303078333030302e706e67",height:"200",width:"500"}),(0,a.kt)("p",null,"Express is a minimal and flexible Node.js web application framework that provides a robust set of features for web and mobile applications.The most common use for Node.js is writing Web applications, and a large percentage of these web applications today are using Express.js as their server framework. Express can be used to create JSON APIs, Server-side rendered web applications, or Microservices.\nIt has become the standard server framework for node.js. Express is the backend part of something known as the MEAN stack."),(0,a.kt)("p",null,"The MEAN is a free and open-source JavaScript software stack for building dynamic web sites and web applications which has the following components;"),(0,a.kt)("p",null,"1) MongoDB \u2013 The standard NoSQL database\n2) Express.js \u2013 The default web applications framework\n3) Angular.js \u2013 The JavaScript MVC framework used for web applications\n4) Node.js \u2013 Framework used for scalable server-side and networking applications."),(0,a.kt)("p",null,"The Express.js framework makes it very easy to develop an application which can be used to handle multiple types of requests like the GET, PUT, and POST and DELETE requests."),(0,a.kt)("h2",{id:"developers--"},"Developers :-"),(0,a.kt)("p",null,"TJ Holowaychuk, StrongLoop and others,\nThe initial release date of express is November 16, 2010."),(0,a.kt)("h2",{id:"what-are-routes"},"What are Routes?"),(0,a.kt)("p",null,"Routing aims to describe what code needs to be run in response to a request that the server received. This is typically done based on the combination of the URL pattern and the HTTP Method associated with the request.These are the basic building blocks of any API or web application, and Express provides us with flexible ways to define code to handle these requests."),(0,a.kt)("p",null,"for example:- "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"http://localhost:3000/Books\nhttp://localhost:3000/Students\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If a GET request is made for the first URL, then the response should ideally be a list of books."),(0,a.kt)("li",{parentName:"ul"},"If the GET request is made for the second URL, then the response should ideally be a list of Students."),(0,a.kt)("li",{parentName:"ul"},"So based on the URL which is accessed, a different functionality on the webserver will be invoked, and accordingly, the response will be sent to the client. This is the concept of routing.\nEach route can have one or more handler functions, which are executed when the route is matched.")),(0,a.kt)("h2",{id:"requestresponse"},"Request/Response"),(0,a.kt)("p",null,"Often shortened to req and res, you'll see these everywhere when working with Express and other Node.js server frameworks. They represent the Request which was received by the server, and the Response which you will eventually send back."),(0,a.kt)("h2",{id:"middlewares"},"Middlewares"),(0,a.kt)("p",null,"Middleware are functions that have access to the Request and Response objects. They can run any arbitrary code, and are executed one after another according to what order the middleware are stacked. Middleware are part of the program that add some kind of functionality to your application, often by augmenting or adding things to the req and res objects themselves. Middleware can be added into your application without needing to change much."),(0,a.kt)("h2",{id:"why-use-express"},"Why use Express?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Ultra fast I/O"),(0,a.kt)("li",{parentName:"ul"},"Asynchronous and single threaded"),(0,a.kt)("li",{parentName:"ul"},"MVC like structure"),(0,a.kt)("li",{parentName:"ul"},"Robust API makes routing easy.")),(0,a.kt)("h2",{id:"example-code-to-import-express-in-the-node-app"},"Example code to import express in the node app:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const express = require('express');\nInitializing the app:\n\nconst app = express();\nGetting the path request and sending the response with text:\n\napp.get('/', (req,res)=>{\n    res.send('Hi, your request has been received')\n})\nListening at the port 2000:\n\napp.listen(3000, ()=>{\n    console.log('listening at https://localhost:2000')\n})\n")),(0,a.kt)("p",null,'After running this JavaScript file in the terminal by command "node nameOfFileHere", the server is started and if in the browser\'s URL "http://localhost:3000" is typed, the text "Hi, your request has been received" can be seen.'),(0,a.kt)("h2",{id:"companies-using-express-in-their-stack"},"Companies using Express in their stack:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Twitter"),(0,a.kt)("li",{parentName:"ul"},"stack"),(0,a.kt)("li",{parentName:"ul"},"accenture"),(0,a.kt)("li",{parentName:"ul"},"client platform etc.")),(0,a.kt)("h2",{id:"alternatives-of-express"},"Alternatives of express:"),(0,a.kt)("p",null,"Koa, React, Flask, Django, and Go are the most popular alternatives and competitors to ExpressJS."))}u.isMDXComponent=!0}}]);