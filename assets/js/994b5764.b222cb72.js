"use strict";(self.webpackChunkgwoc_open_source=self.webpackChunkgwoc_open_source||[]).push([[6642],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,g=m["".concat(p,".").concat(d)]||m[d]||s[d]||a;return n?r.createElement(g,l(l({ref:t},u),{},{components:n})):r.createElement(g,l({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7200:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),l=["components"],o={sidebar_position:22},p="CNI",c={unversionedId:"CNCF Projects/5.22_CNI",id:"CNCF Projects/5.22_CNI",isDocsHomePage:!1,title:"CNI",description:"- The simplest possible interface between container runtime and network implementation",source:"@site/docs/CNCF Projects/5.22_CNI.md",sourceDirName:"CNCF Projects",slug:"/CNCF Projects/5.22_CNI",permalink:"/docs/CNCF Projects/5.22_CNI",tags:[],version:"current",sidebarPosition:22,frontMatter:{sidebar_position:22},sidebar:"tutorialSidebar",previous:{title:"CloudEvents",permalink:"/docs/CNCF Projects/5.21_CloudEvents"},next:{title:"CRI-O",permalink:"/docs/CNCF Projects/5.23_CRI-O"}},u=[{value:"What does a CNI call look like?",id:"what-does-a-cni-call-look-like",children:[],level:2},{value:"Network plugin calls IPAM plugin",id:"network-plugin-calls-ipam-plugin",children:[],level:2},{value:"CNI project repo",id:"cni-project-repo",children:[],level:2},{value:"CNI plugins repo",id:"cni-plugins-repo",children:[{value:"<strong>Main: interface-creating</strong>",id:"main-interface-creating",children:[],level:3},{value:"<strong>IPAM: IP address allocation</strong>",id:"ipam-ip-address-allocation",children:[],level:3},{value:"<strong>Meta: other plugins</strong>",id:"meta-other-plugins",children:[],level:3},{value:"<strong>Sample</strong>",id:"sample",children:[],level:3}],level:2},{value:"Ecosystem",id:"ecosystem",children:[{value:"<strong>Container runtimes</strong>",id:"container-runtimes",children:[],level:3},{value:"<strong>3rd party plugins</strong>",id:"3rd-party-plugins",children:[],level:3}],level:2}],s={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cni"},"CNI"),(0,a.kt)("img",{src:"https://www.cni.dev/img/logos/cni-horizontal-color.png",height:"200",width:"500"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The simplest possible interface between container runtime and network implementation "),(0,a.kt)("li",{parentName:"ul"},"Originated at CoreOS as part of Rkt"),(0,a.kt)("li",{parentName:"ul"},"Now a CNCF project"),(0,a.kt)("li",{parentName:"ul"},"CNI is a simple interface based on environment variables\nand JSON"),(0,a.kt)("li",{parentName:"ul"},"Open Source, lots of runtimes and plugins use it ")),(0,a.kt)("img",{src:"https://drive.google.com/uc?export=view&id=10vbJF-9dTqSyGjWBdiw0NXN7MGuPkesZ"}),(0,a.kt)("h2",{id:"what-does-a-cni-call-look-like"},"What does a CNI call look like?"),(0,a.kt)("img",{src:"https://drive.google.com/uc?export=view&id=1f9pp6N324KNgLA5z6rhLBriEGHZgkGyt"}),(0,a.kt)("img",{src:"https://drive.google.com/uc?export=view&id=1yaDaR3oUel7g90Yt0RzMx6aRyFZuxq4e"}),(0,a.kt)("h2",{id:"network-plugin-calls-ipam-plugin"},"Network plugin calls IPAM plugin"),(0,a.kt)("img",{src:"https://drive.google.com/uc?export=view&id=1s6p7va63Sja8wD01ZP2fSb4iTcq_FOzA"}),(0,a.kt)("h2",{id:"cni-project-repo"},"CNI project repo"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/containernetworking/cni"},"https://github.com/containernetworking/cni")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"CNI Specification: the API between runtimes and network plugins")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Conventions: extensions to the API that are not required for all plugins")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Library: a Go implementation of the CNI specification that plugins and runtimes can use")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"5 maintainers")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"63 contributors from 10+ companies")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"785 stars"))),(0,a.kt)("h2",{id:"cni-plugins-repo"},"CNI plugins repo"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/containernetworking/plugins"},"https://github.com/containernetworking/plugins")),(0,a.kt)("h3",{id:"main-interface-creating"},(0,a.kt)("strong",{parentName:"h3"},"Main: interface-creating")),(0,a.kt)("p",null,"\u2022 bridge\n\u2022 ipvlan\n\u2022 loopback\n\u2022 macvlan\n\u2022 ptp\n\u2022 vlan"),(0,a.kt)("h3",{id:"ipam-ip-address-allocation"},(0,a.kt)("strong",{parentName:"h3"},"IPAM: IP address allocation")),(0,a.kt)("p",null,"\u2022 dhcp\n\u2022 host-local"),(0,a.kt)("h3",{id:"meta-other-plugins"},(0,a.kt)("strong",{parentName:"h3"},"Meta: other plugins")),(0,a.kt)("p",null,"\u2022 flannel\n\u2022 tuning\n\u2022 portmap"),(0,a.kt)("h3",{id:"sample"},(0,a.kt)("strong",{parentName:"h3"},"Sample")),(0,a.kt)("p",null,"\u2022 The sample plugin provides an\nexample for building your own\nplugin."),(0,a.kt)("h2",{id:"ecosystem"},"Ecosystem"),(0,a.kt)("h3",{id:"container-runtimes"},(0,a.kt)("strong",{parentName:"h3"},"Container runtimes")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"rkt - container engin"),(0,a.kt)("li",{parentName:"ul"},"Kubernetes"),(0,a.kt)("li",{parentName:"ul"},"Kurma - container runtime"),(0,a.kt)("li",{parentName:"ul"},"Cloud Foundry - a platform for cloud applications"),(0,a.kt)("li",{parentName:"ul"},"Mesos - a distributed systems kernel")),(0,a.kt)("h3",{id:"3rd-party-plugins"},(0,a.kt)("strong",{parentName:"h3"},"3rd party plugins")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Weave Net"),(0,a.kt)("li",{parentName:"ul"},"Project Calico"),(0,a.kt)("li",{parentName:"ul"},"Contiv"),(0,a.kt)("li",{parentName:"ul"},"SR-IOV"),(0,a.kt)("li",{parentName:"ul"},"Cilium"),(0,a.kt)("li",{parentName:"ul"},"Infoblox"),(0,a.kt)("li",{parentName:"ul"},"Multus"),(0,a.kt)("li",{parentName:"ul"},"Romana"),(0,a.kt)("li",{parentName:"ul"},"CNI-Genie")))}m.isMDXComponent=!0}}]);