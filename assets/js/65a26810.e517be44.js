"use strict";(self.webpackChunkgwoc_open_source=self.webpackChunkgwoc_open_source||[]).push([[8444],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5944:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={sidebar_position:48},l="SASS",c={unversionedId:"Popular_Projects/6.47_Sass",id:"Popular_Projects/6.47_Sass",isDocsHomePage:!1,title:"SASS",description:"If you're new to web design, you've certainly heard the word, but you might not know what Sass is, what it does, or whether or not you should use it. Sass is a CSS preprocessor that provides extra capabilities to normal CSS including variables, nested rules, and mixin to make the coding process simpler and more efficient. Let's explore in more detail.",source:"@site/docs/Popular_Projects/6.47_Sass.md",sourceDirName:"Popular_Projects",slug:"/Popular_Projects/6.47_Sass",permalink:"/docs/Popular_Projects/6.47_Sass",tags:[],version:"current",sidebarPosition:48,frontMatter:{sidebar_position:48},sidebar:"tutorialSidebar",previous:{title:"GraphQL Engine",permalink:"/docs/Popular_Projects/6.46_GraphQLEngine"},next:{title:"Nx",permalink:"/docs/Popular_Projects/6.48_nx"}},u=[{value:"CSS preprocessor",id:"css-preprocessor",children:[],level:2},{value:"How to use Sass?",id:"how-to-use-sass",children:[],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sass"},"SASS"),(0,o.kt)("p",null,"If you're new to web design, you've certainly heard the word, but you might not know what Sass is, what it does, or whether or not you should use it. Sass is a CSS preprocessor that provides extra capabilities to normal CSS including variables, nested rules, and mixin to make the coding process simpler and more efficient. Let's explore in more detail.  "),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/54666019/138741783-47b31b24-3d5c-4264-9795-ec03619dc219.jpg",alt:"Sass-Logo"})),(0,o.kt)("h2",{id:"css-preprocessor"},"CSS preprocessor"),(0,o.kt)("p",null,"A CSS preprocessor is a scripting language that allows developers to write code in one language and compile it into CSS. Less and Stylus are two well-known examples of preprocessors. Most web designers agree that if you're new to CSS, you should stay away from Sass until you've mastered the basics. While they do offer numerous benefits in terms of speed and efficiency, it's critical that you master the fundamentals of CSS.  "),(0,o.kt)("h2",{id:"how-to-use-sass"},"How to use Sass?"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Syntax"),(0,o.kt)("br",{parentName:"p"}),"\n","Two syntactic choices are available in Sass:  "),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"SCSS (Sassy CSS): It is completely compatible with CSS syntax and uses the.scss file extension."),(0,o.kt)("li",{parentName:"ul"},"Indented (simply called 'Sass'): It uses the.sass file extension and indentation instead of brackets; it isn't entirely compatible with CSS syntax, but it's faster to create.  "))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Variables"),(0,o.kt)("br",{parentName:"p"}),"\n","Variables in Sass may be used to hold data that can be used across your style sheet. For example, at the start of the file, you may put a colour value in a variable, and then utilise that variable to set the colour of your components.",(0,o.kt)("br",{parentName:"p"}),"\n","e.g - "))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$font-stack:    Helvetica, sans-serif;\n$primary-color: #333;\nbody {\n  font: 100% $font-stack;\n  color: $primary-color;\n} \n\n following CSS will be produced: \n\n  body {\n    font: 100% Helvetica, sans-serif;\n    color: #333;\n  }\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Nesting"),(0,o.kt)("br",{parentName:"li"}),"The act of nesting has two sides. While it's a great way to cut down on the amount of code you have to write, if you don't use it correctly, it can result in over-qualified CSS.",(0,o.kt)("br",{parentName:"li"}),"A basic navigation strategy that makes advantage of nesting is shown below:  ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nav {\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  li { display: inline-block; }\n\n  a {\n    display: block;\n    padding: 6px 12px;\n    text-decoration: none;\n  }\n}\n")),(0,o.kt)("p",null,"The following is the CSS output:  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nav ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\nnav li {\n  display: inline-block;\n}\n\nnav a {\n  display: block;\n  padding: 6px 12px;\n  text-decoration: none;\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Partials"),(0,o.kt)("br",{parentName:"li"}),"Partials are smaller Sass files that may be imported into larger Sass files (see section below). Partials can be thought of as bits of code. Your CSS is now modular and easy to manage thanks to these code snippets.  "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Import"),(0,o.kt)("br",{parentName:"li"}),"Used with Partials , the @import directive allows you to import your partial files into the current file, to build one single CSS file. Be mindful of how many imports you're using as an HTTP request will be generated for each one.  ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// _reset.scss\n\nhtml,\nbody,\nul,\nol {\n   margin: 0;\n  padding: 0;\n}\n// basefile.scss\n\n@import 'reset';\n\nbody {\n  font: 100% Helvetica, sans-serif;\n  background-color: #efefef;\n}\n")),(0,o.kt)("p",null,"CSS Output: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"html, body, ul, ol {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font: 100% Helvetica, sans-serif;\n  background-color: #efefef;\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Mixins"),(0,o.kt)("br",{parentName:"li"}),"Preprocessors have the capacity to simplify complex, long-winded code, which is one of the benefits of utilising them. Mixins can very helpful in this situation. Mixins let you create styles that can be reused across your CSS. They make it simple to avoid non-semantic classes like.float-left and to share style libraries.  "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Extend/Inheritance"),(0,o.kt)("br",{parentName:"li"}),"The @extend directive has been called one of Sass' most powerful features. The concept is that you won't have to use numerous class names on your HTML elements if you use this directive, and your code will be more DRY. Your selectors can take on the styles of other selectors and be readily expanded as needed. That's a significant statement.  "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Operators"),(0,o.kt)("br",{parentName:"li"}),"With the ability to conduct calculations in CSS, you can do things like convert pixel values to percentages. You'll be able to do basic math operations such as addition, subtraction, multiplication, and division. These functions may, of course, be combined to produce more complicated computations.")))}d.isMDXComponent=!0}}]);