"use strict";(self.webpackChunkgwoc_open_source=self.webpackChunkgwoc_open_source||[]).push([[2903],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return h}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(r),h=o,d=p["".concat(u,".").concat(h)]||p[h]||m[h]||a;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4238:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],s={sidebar_position:6},u="Prometheus",l={unversionedId:"CNCF Projects/5.6_Prometheus",id:"CNCF Projects/5.6_Prometheus",isDocsHomePage:!1,title:"Prometheus",description:"Introduction",source:"@site/docs/CNCF Projects/5.6_Prometheus.md",sourceDirName:"CNCF Projects",slug:"/CNCF Projects/5.6_Prometheus",permalink:"/docs/CNCF Projects/5.6_Prometheus",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Terraform",permalink:"/docs/CNCF Projects/5.5_Terraform"},next:{title:"Vitess",permalink:"/docs/CNCF Projects/5.7_Vitess"}},c=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"Architecture of Prometheus",id:"architecture-of-prometheus",children:[],level:2},{value:"Prometheus Metric Types",id:"prometheus-metric-types",children:[],level:2},{value:"Use Cases of Prometheus",id:"use-cases-of-prometheus",children:[],level:2},{value:"When not to use Prometheus",id:"when-not-to-use-prometheus",children:[],level:2}],m={toc:c};function p(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"prometheus"},"Prometheus"),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Prometheus was created to monitor highly dynamic container environments like kubernetes, docker, swarm, etc however it can also be used in a traditional non container infrastructure where you have just bare servers with applications deployed directly on em so over the past years Prometheus has become the mainstream monitoring tool of choice in container and micro service world."),(0,a.kt)("h2",{id:"architecture-of-prometheus"},"Architecture of Prometheus"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/54666019/134498066-85725cfe-229e-4eee-938c-1d678f782218.png",alt:"components"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Client Libraries: In code you control, you may both specify a metric and add the instrumentation you want inline with the help of client libraries.  ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Exporters: An exporter is installed alongside the programme from which you wish to extract metrics. It takes request from prometheus, collect the needed data from the application, transform them in required format and renturns to prometheus.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Scraping: Prometheus needs to fetch the metrics given by a list of targets given by service discovery and relabelling, prometheus does this by sending a HTTP request callled scrape. It happen regularly for each target, you'd typically schedule it to happen every 10 to 60 seconds.  ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Dashboards: Prometheus has a variety of HTTP APIs that let you request raw data as well as analyse PromQL queries. But using Grafana for dashboards is the best way which includes wide variety of dashboards and features.",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/54666019/134502003-f428da2d-00ab-4fc6-81c8-9b79102fe202.png",alt:"dashboard"}))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Alert Management: It is used for converting alerts into notifications which includes email, slack, and and other notification services. With alert management, related alerts can be aggregated to one notification and different outputs and routing can be configured for different teams."))),(0,a.kt)("h2",{id:"prometheus-metric-types"},"Prometheus Metric Types"),(0,a.kt)("p",null,"It monitors four metric types:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Counter: It is the simplest metric, As its name suggests It is useful for monitoring values that can only increase and once value reaches a given number, counter is set to zero."),(0,a.kt)("li",{parentName:"ul"},"Gauge: This metric measure values that rise and fall, it covers things like current memory utilisation and the number of queries running at the same time."),(0,a.kt)("li",{parentName:"ul"},"Summary: It shows the total number of observations and sum of observed values."),(0,a.kt)("li",{parentName:"ul"},"Histogram: This metric is for sampling request durations, response sizes, and similar observations. It generally counts in buckets and gives you the total of all the data you've seen.")),(0,a.kt)("h2",{id:"use-cases-of-prometheus"},"Use Cases of Prometheus"),(0,a.kt)("p",null,"Modern DevOps is becoming more and more complex to handle manually and therefore needs more automation,"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Prometheus assists us in this area by scraping data from the endpoint using query language (PromQL). "),(0,a.kt)("li",{parentName:"ul"},"Promethus can monitor Linux/Windows server, Web server, Stateless application and statefull applications. "),(0,a.kt)("li",{parentName:"ul"},"Prometheus can also be integrate with grafana to visualise the metrics data for analysis."),(0,a.kt)("li",{parentName:"ul"},"We can trigger the alters if something is misconfigured or high traffic in the application.")),(0,a.kt)("h2",{id:"when-not-to-use-prometheus"},"When not to use Prometheus"),(0,a.kt)("p",null,"Let's take a look at some scenarios where Prometheus isn't the best choice,"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Prometheus is not good option\xa0to store event logs or individual events as a metrics-based solution. It's also not the greatest option for data with a lot of cardinality, such as email addresses or usernames."),(0,a.kt)("li",{parentName:"ul"},"Applications involving money or billing, Prometheus should be used with caution because prometheus is designed for operational monitoring, where small inaccuracies and race conditions due to factors like kernel scheduling and failed scrapes are a fact of life.")))}p.isMDXComponent=!0}}]);