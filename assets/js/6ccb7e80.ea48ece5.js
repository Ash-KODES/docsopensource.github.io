"use strict";(self.webpackChunkgwoc_open_source=self.webpackChunkgwoc_open_source||[]).push([[487],{3905:function(e,t,o){o.d(t,{Zo:function(){return c},kt:function(){return m}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),u=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),h=u(o),m=r,d=h["".concat(l,".").concat(m)]||h[m]||p[m]||a;return o?n.createElement(d,s(s({ref:t},c),{},{components:o})):n.createElement(d,s({ref:t},c))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,s=new Array(a);s[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var u=2;u<a;u++)s[u]=o[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,o)}h.displayName="MDXCreateElement"},1305:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return h}});var n=o(7462),r=o(3366),a=(o(7294),o(3905)),s=["components"],i={sidebar_position:30},l="Thanos",u={unversionedId:"CNCF Projects/5.30_Thanos",id:"CNCF Projects/5.30_Thanos",isDocsHomePage:!1,title:"Thanos",description:"INTRODUCTION: -",source:"@site/docs/CNCF Projects/5.30_Thanos.md",sourceDirName:"CNCF Projects",slug:"/CNCF Projects/5.30_Thanos",permalink:"/docs/CNCF Projects/5.30_Thanos",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"SPIRE",permalink:"/docs/CNCF Projects/5.29_SPIRE"},next:{title:"Contour",permalink:"/docs/CNCF Projects/5.31_Contour"}},c=[{value:"<strong>What is Prometheus?</strong>",id:"what-is-prometheus",children:[],level:2},{value:"<strong>Building</strong>",id:"building",children:[],level:2},{value:"<strong>Integrations\xa0StoreAPI</strong>",id:"integrationsstoreapi",children:[],level:2},{value:"<strong>Deploying Thanos</strong>",id:"deploying-thanos",children:[],level:2}],p={toc:c};function h(e){var t=e.components,o=(0,r.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"thanos"},"Thanos"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://repository-images.githubusercontent.com/109162639/97e49180-661b-11e9-9882-fdc44b74debd",alt:null})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"INTRODUCTION:")," -\nThanos is an open-source extension to Prometheus created by Improbable, a British gaming technology company. In their blog post announcing the release of Thanos, Improbable revealed the project's goal: \"",(0,a.kt)("a",{parentName:"p",href:"https://www.improbable.io/blog/thanos-prometheus-at-scale"},"to seamlessly transform existing Prometheus deployments in clusters around the world into a unified monitoring system with unbounded historical data storage"),'."'),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.cncf.io/wp-content/uploads/2020/08/prometheusBanner-1.png",alt:null})),(0,a.kt)("h2",{id:"what-is-prometheus"},(0,a.kt)("strong",{parentName:"h2"},"What is Prometheus?")),(0,a.kt)("p",null,"In short,\xa0",(0,a.kt)("a",{parentName:"p",href:"https://prometheus.io/"},"Prometheus"),"\xa0is a system monitoring and alerting toolkit. People use Prometheus to monitor various kinds of workloads, from their application to the infrastructure the application is deployed on. Prometheus was initially created with more focus on real-time monitoring, with data retention requirements in order of a few months."),(0,a.kt)("p",null,"Thanos was created to address these limitations. With Thanos, you can have a highly available Prometheus setup, with unlimited retention of data. It allows you to store the metrics generated by Prometheus in object storage of your choice. It also allows you to have a global view of metrics from all the Prometheus instances."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"By adding Thanos to Prometheus, users can build highly available metric systems with practically unlimited storage. When deployed, Thanos provides features such as a global query view, high accessibility (HA), and affordable access to historical data in a single binary.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"The various components of the Thanos project are as follows:")),(0,a.kt)("img",{src:"https://dz2cdn1.dzone.com/storage/temp/15018924-thanos-sidecar.png"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Thanos Sidecar:"),"\xa0\nThe main component of Thanos that runs alongside Prometheus, reading and archiving data on the object store. Sidecar can also execute\xa0PromQL queries."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Thanos Store:"),"\xa0\nAn API gateway that sits on top of historical Prometheus data in an object storage bucket.\xa0"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Thanos Query:"),"\xa0\nAn aggregator for query results from multiple sources, multiple Sidecar instances."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Thanos Compact:"),"\xa0\nA component that applies Prometheus 2.0's compaction procedure to block data in object store."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Thanos Ruler:"),"\n\xa0A component that evaluates the Prometheus recording and alerting rules against your choice of query API.")),(0,a.kt)("h2",{id:"building"},(0,a.kt)("strong",{parentName:"h2"},"Building")),(0,a.kt)("p",null,"Thanos is built purely in\xa0",(0,a.kt)("a",{parentName:"p",href:"https://golang.org/"},"Golang"),", thus allowing to run Thanos on various x64 operating systems."),(0,a.kt)("p",null,"If you want to build Thanos from source you would need a working installation of the Go 1.16+\xa0",(0,a.kt)("a",{parentName:"p",href:"https://github.com/golang/tools"},"toolchain"),"\xa0"),(0,a.kt)("p",null,"Thanos can be downloaded and built by running:"),(0,a.kt)("p",null,"go get github.com/thanos-io/thanos/cmd/thanos"),(0,a.kt)("p",null,"The\xa0thanos\xa0binary should now be in your\xa0$PATH\xa0and is the only thing required to deploy any of its components."),(0,a.kt)("h2",{id:"integrationsstoreapi"},(0,a.kt)("strong",{parentName:"h2"},"Integrations\xa0StoreAPI")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/thanos-io/thanos/blob/main/pkg/store/storepb/rpc.proto"},"StoreAPI"),"\xa0is a common proto interface for gRPC component that can connect to\xa0",(0,a.kt)("a",{parentName:"p",href:"https://thanos.io/tip/components/query.md/"},"Querier"),"\xa0in order to fetch the metric series. Natively Thanos implements\xa0",(0,a.kt)("a",{parentName:"p",href:"https://thanos.io/tip/components/sidecar.md/"},"Sidecar"),"\xa0(local Prometheus data),\xa0",(0,a.kt)("a",{parentName:"p",href:"https://thanos.io/tip/components/rule.md/"},"Ruler"),"\xa0and\xa0",(0,a.kt)("a",{parentName:"p",href:"https://thanos.io/tip/components/store.md/"},"Store gateway"),". This solves fetching series from Prometheus or Prometheus TSDB format, however same interface can be used to fetch metrics from other storages."),(0,a.kt)("h2",{id:"deploying-thanos"},(0,a.kt)("strong",{parentName:"h2"},"Deploying Thanos")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"WIP Detailed, free, in-browser interactive tutorial\xa0",(0,a.kt)("a",{parentName:"li",href:"https://katacoda.com/thanos/courses/thanos/1-globalview"},"as Katacoda Thanos Course")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://thanos.io/tip/thanos/quick-tutorial.md/"},"Quick Tutorial"),"\xa0on Thanos website.")))}h.isMDXComponent=!0}}]);