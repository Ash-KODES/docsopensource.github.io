"use strict";(self.webpackChunkgwoc_open_source=self.webpackChunkgwoc_open_source||[]).push([[9535],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=i,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8296:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),l=["components"],o={sidebar_position:69},s="OpenNN(Open Neural Network Library)",u={unversionedId:"Popular_Projects/6.68_OpenNN",id:"Popular_Projects/6.68_OpenNN",isDocsHomePage:!1,title:"OpenNN(Open Neural Network Library)",description:"logo",source:"@site/docs/Popular_Projects/6.68_OpenNN.md",sourceDirName:"Popular_Projects",slug:"/Popular_Projects/6.68_OpenNN",permalink:"/docs/Popular_Projects/6.68_OpenNN",tags:[],version:"current",sidebarPosition:69,frontMatter:{sidebar_position:69},sidebar:"tutorialSidebar",previous:{title:"Notepad++",permalink:"/docs/Popular_Projects/6.67_notepad++"},next:{title:"Thunderbird",permalink:"/docs/Popular_Projects/6.69_thunderbird"}},p=[{value:"What is Neural Network?",id:"what-is-neural-network",children:[],level:2},{value:"History:",id:"history",children:[{value:"GitHub repo glance",id:"github-repo-glance",children:[],level:3}],level:2},{value:"Working with OpenNN",id:"working-with-opennn",children:[{value:"Below are the steps to build a neural network in OpenNN",id:"below-are-the-steps-to-build-a-neural-network-in-opennn",children:[],level:3}],level:2},{value:"Data set:",id:"data-set",children:[],level:2},{value:"Neural Network:",id:"neural-network",children:[],level:2},{value:"Training strategy:",id:"training-strategy",children:[],level:2},{value:"Model selection:",id:"model-selection",children:[],level:2},{value:"Testing analysis:",id:"testing-analysis",children:[],level:2},{value:"Model deployment:",id:"model-deployment",children:[],level:2},{value:"Advantages of using OpenNN",id:"advantages-of-using-opennn",children:[{value:"Faster Training",id:"faster-training",children:[],level:3}],level:2},{value:"Some OpenNN users",id:"some-opennn-users",children:[],level:2},{value:"Applications",id:"applications",children:[],level:2},{value:"References",id:"references",children:[],level:2}],c={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"opennnopen-neural-network-library"},"OpenNN(Open Neural Network Library)"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://camo.githubusercontent.com/c945d49700b96025971591ae2b0f68913020eee670faf9dfd53800ff70600c5d/687474703a2f2f7777772e6f70656e6e6e2e6e65742f696d616765732f6f70656e6e6e5f6769745f6c6f676f2e737667",alt:"logo"})),(0,a.kt)("h2",{id:"what-is-neural-network"},"What is Neural Network?"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://victorzhou.com/media/nn-series/network.svg",alt:"neuralnetwork"})),(0,a.kt)("p",null,"It is base of Deep learning which is subfield of Machine learning. It is an algorithm inspired by human network. This algorithm is successful to deal with AI\nsolutions such as Regression, Classification, Forecasting, Assosciation. "),(0,a.kt)("p",null,"To make it simpler this is stored in Library known as Open Neural Network Library. This software library is cross platform and implemented in C++. "),(0,a.kt)("h2",{id:"history"},"History:"),(0,a.kt)("p",null," It is developed by Startup company Artelnics, which is specialized in Artificial Intelligence. Initial development was started in 2003 at  International Centre for Numerical\nMethods in Engineering."),(0,a.kt)("p",null,"In the biginning it was within the research project funded by RAMFLOOD which is a European union. "),(0,a.kt)("h3",{id:"github-repo-glance"},"GitHub repo glance"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Stars: 844"),(0,a.kt)("li",{parentName:"ul"},"Forks: 298"),(0,a.kt)("li",{parentName:"ul"},"Contributors: 24"),(0,a.kt)("li",{parentName:"ul"},"Latest version: OpenNN v0.5"),(0,a.kt)("li",{parentName:"ul"},"Languages: C++, Fortan, CMake, C, Cuda, Shell"),(0,a.kt)("li",{parentName:"ul"},"License type: LGPL")),(0,a.kt)("p",null,"Refer OpenNN ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Artelnics/opennn"},"GitHub")," Repository."),(0,a.kt)("h2",{id:"working-with-opennn"},"Working with OpenNN"),(0,a.kt)("p",null,"We will be discussing about projects, classes, models, and many things. There is beautiful and easy tutorial about OpenNN in official website. You can refer them as well."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This library can be run on any system since it is written in ANSI C++.")),(0,a.kt)("h3",{id:"below-are-the-steps-to-build-a-neural-network-in-opennn"},"Below are the steps to build a neural network in OpenNN"),(0,a.kt)("h2",{id:"data-set"},"Data set:"),(0,a.kt)("p",null,"  At the begin we need to provide Data set which include Data source, Variables, Instances. This provide all information to build model. "),(0,a.kt)("p",null,'  This can called by including header file: "#include<data_set.h>". Variables varies for different problems. e.g, sepal_length, sepal_width, class etc. The instances are divided into training, selection, and testing subsets.'),(0,a.kt)("h2",{id:"neural-network"},"Neural Network:"),(0,a.kt)("p",null,"  In this step we select right architecture of neural network. This include, A scaling layer, two perception layer, A probabilistic layer."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"We define it as follows:\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Tensor<Index, 1> architecture(3);\n    const Index hidden_neurons_number = 3;\n    architecture.setValues({input_variables_number, hidden_neurons_number,target_variables_number});\n")),(0,a.kt)("h2",{id:"training-strategy"},"Training strategy:"),(0,a.kt)("p",null,"  This step is composed of Loss index, Optimization algorithm."),(0,a.kt)("h2",{id:"model-selection"},"Model selection:"),(0,a.kt)("p",null,"  This step include selection of various models such as, Inputs selection algorithm and neuron selection algorithm."),(0,a.kt)("h2",{id:"testing-analysis"},"Testing analysis:"),(0,a.kt)("p",null,"  Now its time to examine our model. Here we are using testing analysis class, which evaluates the model's generalization performance. "),(0,a.kt)("p",null,"  Firstly we do reverse process and unscale data. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    data_set.unscale_input_variable(inputs_descriptives):\n")),(0,a.kt)("p",null,"Next, build testing analysis object to test our model."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    TestingAnalysis testing_analysis(&neural_network, &data_set);\n")),(0,a.kt)("p",null,"  Perform testing."),(0,a.kt)("h2",{id:"model-deployment"},"Model deployment:"),(0,a.kt)("p",null,"  If testing is successful, then our model of neural network is ready to predics outputs. This process is deployment. To generate output we can use:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"neural_network.calculate_outputs();\n")),(0,a.kt)("h2",{id:"advantages-of-using-opennn"},"Advantages of using OpenNN"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("h3",{parentName:"li",id:"higher-capacity"},"Higher Capacity"),(0,a.kt)("img",{parentName:"li",src:"https://www.neuraldesigner.com/images/training-speed_comparison.svg",alt:"Capatity"}))),(0,a.kt)("p",null,"OpenNN manages Bigger Data Sets efficiently. For instance, it loads data sets 1.8 times bigger than TensorFlow and PyTorch."),(0,a.kt)("h3",{id:"faster-training"},"Faster Training"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.neuraldesigner.com/images/training-speed_comparison.svg",alt:"Training speed"})),(0,a.kt)("p",null,"If you want to boost your productivity OpenNN is for you.\nOn average, OpenNN trains a model 2.508 times faster than PyTorch and 1.551 times faster than TensorFlow."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("h2",{parentName:"li",id:"neural-designer"},"Neural Designer"))),(0,a.kt)("p",null,"How about building neural network models without programming? Neural Designer is right software tool.It include a user interface that\nsimplifies data entry and interpretation of results which is also developed from OpenNN."),(0,a.kt)("p",null,"To get familiar visit official website of ",(0,a.kt)("a",{parentName:"p",href:"https://www.neuraldesigner.com/"},"Neural Designer")," and take demo."),(0,a.kt)("h2",{id:"some-opennn-users"},"Some OpenNN users"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Airbus"),(0,a.kt)("li",{parentName:"ul"},"Philips"),(0,a.kt)("li",{parentName:"ul"},"University of Washington"),(0,a.kt)("li",{parentName:"ul"},"Seat"),(0,a.kt)("li",{parentName:"ul"},"Thales"),(0,a.kt)("li",{parentName:"ul"},"acciona")),(0,a.kt)("h2",{id:"applications"},"Applications"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Business intelligence(customer segmentation, churn prevention...)"),(0,a.kt)("li",{parentName:"ul"},"Health care(early diagnosis, microarray analysis,...)"),(0,a.kt)("li",{parentName:"ul"},"Engineering(performance optimization, predictive maintenance)")),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.opennn.net/"},"Official Website")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/OpenNN"},"Wikipedia"))))}d.isMDXComponent=!0}}]);